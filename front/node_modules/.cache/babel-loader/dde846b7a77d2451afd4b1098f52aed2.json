{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispath => {\n    setTimeout(() => {\n      dispath(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (uname, pass) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('http://localhost:8000/api_user/login/', {\n      username: uname,\n      password: pass\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      console.log(token);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      console.log(err.response);\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispath => {\n    dispath(authStart);\n    axios.post('http://localhost:8000/api-auth/registration/', {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispath(authSuccess(token));\n      dispath(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispath(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/mehdi/Desktop/medical_web/front/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispath","setTimeout","authLogin","uname","pass","dispatch","post","username","password","then","res","data","key","expirationDate","Date","getTime","console","log","setItem","catch","err","response","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\"\nimport axios from 'axios'\n\nexport const authStart = () => {\n    return{\n        type: actionTypes.AUTH_START\n    }\n}\n\n\nexport const authSuccess = token => {\n    return{\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\n\nexport const authFail = error => {\n    return{\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\n\nexport const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('expirationDate');\n    return{\n        type: actionTypes.AUTH_LOGOUT\n    }\n\n}\n\n\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispath => {\n        setTimeout(() => {\n            dispath(logout())\n        }, expirationTime * 1000)\n    }\n}\n\n\n\n\nexport const authLogin = (uname, pass) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://localhost:8000/api_user/login/', {\n            username: uname, \n            password: pass\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            console.log(token)\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            console.log(err.response)\n            dispatch(authFail(err))\n        })\n\n    }\n}\n\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispath => {\n        dispath(authStart);\n        axios.post('http://localhost:8000/api-auth/registration/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispath(authSuccess(token));\n            dispath(checkAuthTimeout(3600))\n        })\n        .catch(err=> {\n            dispath(authFail(err))\n        })\n\n    }\n}\n\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}
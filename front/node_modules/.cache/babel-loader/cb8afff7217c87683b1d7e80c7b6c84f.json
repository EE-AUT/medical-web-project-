{"ast":null,"code":"var _jsxFileName = \"/home/ali/Documents/medical-web-project-/front/src/pages/signUpForm.js\";\n// const { Component } = require(\"react\")\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\nconst emailRegex = RegExp(/^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/);\n\nconst formValid = ({\n  fullNameError_hidden,\n  emailError_hidden,\n  phoneNumberError_hidden,\n  passwordError_hidden,\n  rePasswordError_hidden,\n  doctorIDError_hidden,\n  isDoctor,\n  doctorID\n}) => {\n  let valid = false;\n\n  if (fullNameError_hidden && emailError_hidden && passwordError_hidden && rePasswordError_hidden && phoneNumberError_hidden && doctorIDError_hidden) {\n    valid = true;\n  }\n\n  if (isDoctor && doctorID.length === 0) {\n    valid = false;\n  }\n\n  return valid;\n};\n\nclass signUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      password: \"\",\n      rePassword: \"\",\n      isDoctor: false,\n      doctorID: \"\",\n      fullNameError_hidden: true,\n      emailError_hidden: true,\n      phoneNumberError_hidden: true,\n      passwordError_hidden: true,\n      rePasswordError_hidden: true,\n      doctorIDError_hidden: true,\n      signUpError_hidden: true,\n      existenceError_hidden: true,\n      fillError_Hidden: true // You already have an account\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let need_to_return = false;\n\n    if (this.state.fullName.length < 1) {\n      // this.state.fullNameError_hidden=false\n      this.setState({\n        fullNameError_hidden: false\n      });\n      need_to_return = true;\n    }\n\n    if (!emailRegex.test(this.state.email)) {\n      this.setState({\n        emailError_hidden: false\n      });\n      need_to_return = true;\n    }\n\n    if (this.state.phoneNumber.length !== 11) {\n      this.setState({\n        phoneNumberError_hidden: false\n      });\n      need_to_return = true;\n    }\n\n    if (this.state.password < 6) {\n      this.setState({\n        passwordError_hidden: false\n      });\n      need_to_return = true;\n    }\n\n    if (this.state.password !== this.state.rePassword) {\n      this.setState({\n        rePasswordError_hidden: false\n      });\n      need_to_return = true;\n    }\n\n    if (this.state.isDoctor && this.state.doctorID < 1) {\n      this.setState({\n        doctorIDError_hidden: false\n      });\n      need_to_return = true;\n    }\n\n    if (need_to_return) {\n      return;\n    }\n\n    if (formValid(this.state)) {\n      axios.post('http://localhost:8000/api_user/register/', {\n        email: this.state.email,\n        phone_number: this.state.phoneNumber,\n        password: this.state.password,\n        full_name: this.state.fullName,\n        register_type: \"web_register\",\n        is_doctor: this.state.isDoctor,\n        doctor_id: this.state.doctorID\n      }).then(res => {\n        if (res.data.email.length === 1) {\n          this.setState({\n            existenceError_hidden: false\n          });\n          this.setState({\n            emailError_hidden: false\n          });\n        } else {\n          this.setState({\n            existenceError_hidden: true\n          });\n          this.props.history.push('/sign-in');\n        }\n      }).catch(err => {\n        console.log(\"error catch in signUp\");\n      });\n    } else {\n      this.setState({\n        fillError_Hidden: false\n      });\n    }\n  }\n\n  handleChange(e) {\n    let target = e.target;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    let name = target.name;\n\n    switch (name) {\n      case 'fullName':\n        this.setState({\n          fullNameError_hidden: true\n        });\n        break;\n\n      case 'email':\n        this.setState({\n          emailError_hidden: true\n        });\n        break;\n\n      case 'phoneNumber':\n        this.setState({\n          phoneNumberError_hidden: true\n        });\n        break;\n\n      case 'password':\n        this.setState({\n          passwordError_hidden: true\n        });\n        break;\n\n      case 'rePassword':\n        this.setState({\n          rePasswordError_hidden: true\n        });\n        break;\n\n      case 'doctorID':\n        this.setState({\n          doctorIDError_hidden: true\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormCenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PageSwitcher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/sign-in\",\n      activeClassName: \"PageSwitcher__Item--Active\",\n      className: \"PageSwitcher__Item \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/sign-up\",\n      activeClassName: \"PageSwitcher__Item--Active\",\n      className: \"PageSwitcher__Item \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/sign-in\",\n      activeClassName: \"FormTitle__Link--Active\",\n      className: \"FormTitle__Link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \"Sign In\"), \" or \", /*#__PURE__*/React.createElement(NavLink, {\n      exact: true,\n      to: \"/sign-up\",\n      activeClassName: \"FormTitle__Link--Active\",\n      className: \"FormTitle__Link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 74\n      }\n    }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"errorMassage_sign\",\n      hidden: this.state.existenceError_hidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, \"Email already exists\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"FormFields\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"fullName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, \" full Name \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"fullName\",\n      className: this.state.fullNameError_hidden ? \"FormField__Input\" : \"errorInput\",\n      placeholder: \"Enter your full name\",\n      name: \"fullName\",\n      onChange: this.handleChange,\n      value: this.state.fullName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMassage\",\n      hidden: this.state.fullNameError_hidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 23\n      }\n    }, \"Please fill out this feild\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, \" Email \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      className: this.state.emailError_hidden ? \"FormField__Input\" : \"errorInput\",\n      placeholder: \"Enter your Email address\",\n      name: \"email\",\n      onChange: this.handleChange,\n      value: this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMassage\",\n      hidden: this.state.emailError_hidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 23\n      }\n    }, \"Invalid email address\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"Phone Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, \"phone number\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"phoneNumber\",\n      className: this.state.phoneNumberError_hidden ? \"FormField__Input\" : \"errorInput\",\n      placeholder: \"Enter your phone number\",\n      name: \"phoneNumber\",\n      value: this.phoneNumber,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMassage\",\n      hidden: this.state.phoneNumberError_hidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 23\n      }\n    }, \"Minimum 11 numbers required\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }, \" Password \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      className: this.state.passwordError_hidden ? \"FormField__Input\" : \"errorInput\",\n      placeholder: \"Enter your password\",\n      name: \"password\",\n      onChange: this.handleChange,\n      value: this.state.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMassage\",\n      hidden: this.state.passwordError_hidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 23\n      }\n    }, \"Minimum 6 characters required\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"repeat password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, \" Repeat Password \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"rePassword\",\n      className: this.state.rePasswordError_hidden ? \"FormField__Input\" : \"errorInput\",\n      placeholder: \"Repeat your password\",\n      name: \"rePassword\",\n      onChange: this.handleChange,\n      value: this.state.rePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMassage\",\n      hidden: this.state.rePasswordError_hidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }, \"Passwords are not matching\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__CheckboxLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"FormField__Checkbox\",\n      type: \"checkbox\",\n      id: \"isDoctor\",\n      name: \"isDoctor\",\n      onChange: this.handleChange,\n      checked: this.state.isDoctor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 29\n      }\n    }), \" Are you a doctor ?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"doctorID\",\n      className: this.state.doctorIDError_hidden ? \"FormField__Input\" : \"errorInput\",\n      placeholder: \"Enter your doctorID\",\n      name: \"doctorID\",\n      hidden: this.state.isDoctor ? false : true,\n      onChange: this.handleChange,\n      value: this.state.doctorID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMassage\",\n      hidden: this.state.doctorIDError_hidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 23\n      }\n    }, \"Please fill out this feild\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FromFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"FormField__Button mr-20\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }\n    }, \" Sign Up \"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onRegister: (email, password, FullName, phoneNumber, is_doctor, doctor_id) => dispatch(actions.authSignup(email, password, FullName, phoneNumber, is_doctor, doctor_id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(signUpForm);","map":{"version":3,"sources":["/home/ali/Documents/medical-web-project-/front/src/pages/signUpForm.js"],"names":["React","Component","NavLink","axios","connect","actions","emailRegex","RegExp","formValid","fullNameError_hidden","emailError_hidden","phoneNumberError_hidden","passwordError_hidden","rePasswordError_hidden","doctorIDError_hidden","isDoctor","doctorID","valid","length","signUpForm","constructor","props","state","fullName","email","phoneNumber","password","rePassword","signUpError_hidden","existenceError_hidden","fillError_Hidden","handleChange","bind","handleSubmit","e","preventDefault","need_to_return","setState","test","post","phone_number","full_name","register_type","is_doctor","doctor_id","then","res","data","history","push","catch","err","console","log","target","value","type","checked","name","render","mapStateToProps","loading","error","mapDispatchToProps","dispatch","onRegister","FullName","authSignup"],"mappings":"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","sourcesContent":["// const { Component } = require(\"react\")\n\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions/auth'\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/);\n\nconst formValid = ({ fullNameError_hidden, emailError_hidden, phoneNumberError_hidden, passwordError_hidden, rePasswordError_hidden, doctorIDError_hidden, isDoctor, doctorID }) => {\n    let valid = false\n    if (fullNameError_hidden && emailError_hidden && passwordError_hidden && rePasswordError_hidden && phoneNumberError_hidden && doctorIDError_hidden) {\n        valid = true\n    }\n\n    if (isDoctor && doctorID.length === 0) {\n        valid = false\n    }\n\n    return valid;\n\n};\n\nclass signUpForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fullName: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n            password: \"\",\n            rePassword: \"\",\n            isDoctor: false,\n            doctorID: \"\",\n\n            fullNameError_hidden: true,\n            emailError_hidden: true,\n            phoneNumberError_hidden: true,\n            passwordError_hidden: true,\n            rePasswordError_hidden: true,\n            doctorIDError_hidden: true,\n            signUpError_hidden: true,\n            existenceError_hidden:true,\n            fillError_Hidden:true\n            // You already have an account\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let need_to_return=false\n        if (this.state.fullName.length < 1) {\n            // this.state.fullNameError_hidden=false\n            this.setState({ fullNameError_hidden: false })\n            need_to_return=true;\n        }\n        if (!emailRegex.test(this.state.email)) {\n            this.setState({ emailError_hidden: false })\n            need_to_return=true;\n        }\n        if (this.state.phoneNumber.length !== 11) {\n            this.setState({ phoneNumberError_hidden: false })\n            need_to_return=true;\n        }\n        if (this.state.password < 6) {\n            this.setState({ passwordError_hidden: false })\n            need_to_return=true;\n        }\n        if (this.state.password !== this.state.rePassword) {\n            this.setState({ rePasswordError_hidden: false })\n            need_to_return=true;\n        }\n        if (this.state.isDoctor && this.state.doctorID < 1) {\n            this.setState({ doctorIDError_hidden: false })\n            need_to_return=true;\n        }\n        if (need_to_return){\n            return;\n        }\n\n        if (formValid(this.state)) {\n            axios.post('http://localhost:8000/api_user/register/', {\n                email: this.state.email,\n                phone_number: this.state.phoneNumber,\n                password: this.state.password,\n                full_name: this.state.fullName,\n                register_type: \"web_register\",\n                is_doctor: this.state.isDoctor,\n                doctor_id: this.state.doctorID\n            })\n            .then(res => {\n                if (res.data.email.length === 1){\n                    this.setState({existenceError_hidden:false})\n                    this.setState({ emailError_hidden: false })\n                }\n                else{\n                    this.setState({existenceError_hidden:true})\n                    this.props.history.push('/sign-in')\n                }\n\n            })\n            .catch(err=> {\n                console.log(\"error catch in signUp\")\n            })\n\n        }\n        else {\n            this.setState({\n                fillError_Hidden:false\n            })\n        }\n\n    }\n\n    handleChange(e) {\n        let target = e.target;\n        let value = target.type === \"checkbox\" ? target.checked : target.value;\n        let name = target.name;\n\n        switch (name) {\n            case 'fullName':\n                this.setState({ fullNameError_hidden: true });\n                break;\n            case 'email':\n                this.setState({ emailError_hidden: true });\n                break;\n            case 'phoneNumber':\n                this.setState({ phoneNumberError_hidden: true });\n                break;\n            case 'password':\n                this.setState({ passwordError_hidden: true });\n                break;\n            case 'rePassword':\n                this.setState({ rePasswordError_hidden: true });\n                break;\n            case 'doctorID':\n                this.setState({ doctorIDError_hidden: true });\n                break;\n            default:\n                break;\n        }\n\n        this.setState(\n            {\n                [name]: value\n            }\n        );\n    }\n    render() {\n        return (\n            <div className=\"FormCenter\" >\n                <div className=\"PageSwitcher\">\n                    <NavLink to=\"/sign-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item \">Sign In</NavLink>\n                    <NavLink to=\"/sign-up\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item \">Sign Up</NavLink>\n                </div>\n                <div className=\"FormTitle\">\n                    <NavLink to=\"/sign-in\" activeClassName=\"FormTitle__Link--Active\"\n                        className=\"FormTitle__Link\">Sign In</NavLink> or <NavLink exact to=\"/sign-up\"\n                            activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign Up</NavLink>\n                </div>\n                <label className=\"errorMassage_sign\" hidden={this.state.existenceError_hidden}>Email already exists</label>\n                <form className=\"FormFields\"\n                    onSubmit={this.handleSubmit} >\n\n                    <div className=\"FormFields\" >\n                        <label className=\"FormField__Label\"\n                            htmlFor=\"fullName\" > full Name </label>\n                        <input type=\"text\"\n                            id=\"fullName\"\n                            className={this.state.fullNameError_hidden ? \"FormField__Input\" : \"errorInput\"}\n                            placeholder=\"Enter your full name\"\n                            name=\"fullName\"\n                            onChange={this.handleChange}\n                            value={this.state.fullName} />\n                    </div>\n                    {(<span className=\"errorMassage\" hidden={this.state.fullNameError_hidden}>Please fill out this feild</span>)}\n\n                    <div className=\"FormFields\" >\n\n                        <label className=\"FormField__Label\"\n                            htmlFor=\"email\" > Email </label>\n                        <input type=\"text\"\n                            id=\"email\"\n                            className={this.state.emailError_hidden ? \"FormField__Input\" : \"errorInput\"}\n                            placeholder=\"Enter your Email address\"\n                            name=\"email\"\n                            onChange={this.handleChange}\n                            value={this.state.email} />\n                    </div>\n                    {(<span className=\"errorMassage\" hidden={this.state.emailError_hidden}>Invalid email address</span>)}\n\n                    <div className=\"FormFields\">\n                        <label className=\"FormField__Label\" htmlFor=\"Phone Number\">phone number</label>\n                        <input type=\"text\" id=\"phoneNumber\"\n                        className={this.state.phoneNumberError_hidden ? \"FormField__Input\" : \"errorInput\"}\n                        placeholder=\"Enter your phone number\" name=\"phoneNumber\" value={this.phoneNumber} onChange={this.handleChange} />\n                    </div>\n                    {(<span className=\"errorMassage\" hidden={this.state.phoneNumberError_hidden}>Minimum 11 numbers required</span>)}\n\n                    <div className=\"FormFields\" >\n                        <label className=\"FormField__Label\"\n                            htmlFor=\"password\" > Password </label>\n                        <input type=\"password\"\n                            id=\"password\"\n                            className={this.state.passwordError_hidden ? \"FormField__Input\" : \"errorInput\"}\n                            placeholder=\"Enter your password\"\n                            name=\"password\"\n                            onChange={this.handleChange}\n                            value={this.state.password}\n                        />\n                    </div>\n                    {(<span className=\"errorMassage\" hidden={this.state.passwordError_hidden} >Minimum 6 characters required</span>)}\n\n                    <div className=\"FormFields\" >\n                        <label className=\"FormField__Label\"\n                            htmlFor=\"repeat password\" > Repeat Password </label>\n                        <input type=\"password\"\n                            id=\"rePassword\"\n                            className={this.state.rePasswordError_hidden ? \"FormField__Input\" : \"errorInput\"}\n                            placeholder=\"Repeat your password\"\n                            name=\"rePassword\"\n                            onChange={this.handleChange}\n                            value={this.state.rePassword}\n                        />\n                    </div>\n                    {(<span className=\"errorMassage\" hidden={this.state.rePasswordError_hidden} >Passwords are not matching</span>)}\n\n                    <div className=\"FormFields\" >\n                        <label className=\"FormField__CheckboxLabel\" >\n\n                            <input className=\"FormField__Checkbox\"\n                                type=\"checkbox\"\n                                id=\"isDoctor\"\n                                name=\"isDoctor\"\n                                onChange={this.handleChange}\n                                checked={this.state.isDoctor}\n                            /> Are you a doctor ?</label>\n                    </div>\n                    <div className=\"FormFields\" >\n\n                        <input type=\"text\"\n                            id=\"doctorID\"\n                            className={this.state.doctorIDError_hidden ? \"FormField__Input\" : \"errorInput\"}\n                            placeholder=\"Enter your doctorID\"\n                            name=\"doctorID\"\n                            hidden={this.state.isDoctor ? false : true}\n                            onChange={this.handleChange}\n                            value={this.state.doctorID} />\n                    </div >\n                    {(<span className=\"errorMassage\" hidden={this.state.doctorIDError_hidden}>Please fill out this feild</span>)}\n\n\n                    <div className=\"FromFields\" >\n                        <button className=\"FormField__Button mr-20\" onClick={this.handleSubmit} > Sign Up </button>\n                    </div >\n                </form>\n            </div >\n        );\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onRegister: (email, password, FullName, phoneNumber, is_doctor, doctor_id) =>\n            dispatch(actions.authSignup(email, password, FullName, phoneNumber, is_doctor, doctor_id))\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(signUpForm);"]},"metadata":{},"sourceType":"module"}
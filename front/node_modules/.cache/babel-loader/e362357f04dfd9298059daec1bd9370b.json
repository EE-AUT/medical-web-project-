{"ast":null,"code":"var _jsxFileName = \"/home/ali/Documents/medical-web-project-/front/src/pages/signUpForm.js\";\n// const { Component } = require(\"react\")\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\nconst emailRegex = RegExp(/^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/);\n\nconst formValid = ({\n  fullNameError_hidden\n}) => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  Object.values(rest).forEach(val => {\n    val.length === 0 && (valid = false);\n  });\n\n  if (rest.isDoctor && doctorID.length === 0) {\n    valid = false;\n  }\n\n  return valid;\n};\n\nclass signUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      password: \"\",\n      rePassword: \"\",\n      isDoctor: false,\n      doctorID: \"\",\n      fullNameError_hidden: true,\n      emailError_hidden: true,\n      phoneNumberError_hidden: true,\n      passwordError_hidden: true,\n      rePasswordError_hidden: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.fullName.length < 1) {\n      this.setState({\n        fullNameError_hidden: false\n      });\n    }\n\n    if (!emailRegex.test(this.state.email)) {\n      this.setState({\n        emailError_hidden: false\n      });\n    }\n\n    if (this.state.phoneNumber != 11) {\n      this.setState({\n        phoneNumberError_hidden: false\n      });\n    }\n\n    if (this.state.password != this.state.rePassword) {\n      this.setState({\n        rePasswordError_hidden: false\n      });\n    }\n\n    if (formValid(this.state)) {\n      console.log('submited');\n      console.log(this.state);\n      this.props.onRegister(this.state.email, this.state.password, this.state.fullName, this.state.phoneNumber, this.state.isDoctor, this.state.doctorID);\n      console.log(localStorage.getItem('token'), \"tset\");\n      this.props.history.push('/sign-in');\n    } else {\n      console.log(\"Error\");\n    }\n  }\n\n  handleChange(e) {\n    let target = e.target;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    let name = target.name;\n    let formErrors = this.state.formErrors;\n\n    if (name === 'email') {\n      this.setState({\n        emailError_hidden: true\n      });\n    }\n\n    switch (name) {\n      case 'fullName':\n        formErrors.fullName = value.length < 1 ? 'Please fill out this feild' : '';\n        break;\n\n      case 'phoneNumber':\n        formErrors.phoneNumber = value.length === 11 ? '' : 'Minimum 11 numbers required';\n        break;\n\n      case 'password':\n        formErrors.password = value.length < 6 ? 'Minimum 6 characters required' : '';\n        break;\n\n      case 'rePassword':\n        formErrors.rePassword = this.state.password !== value ? 'Password are not matching' : '';\n        break;\n\n      case 'doctorID':\n        formErrors.doctorID = value.length < 1 ? 'Please fill out this feild' : '';\n        break;\n\n      default:\n    }\n\n    this.setState({\n      formErrors,\n      [name]: value\n    });\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormCenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PageSwitcher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/sign-in\",\n      activeClassName: \"PageSwitcher__Item--Active\",\n      className: \"PageSwitcher__Item \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/sign-up\",\n      activeClassName: \"PageSwitcher__Item--Active\",\n      className: \"PageSwitcher__Item \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/sign-in\",\n      activeClassName: \"FormTitle__Link--Active\",\n      className: \"FormTitle__Link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, \"Sign In\"), \" or \", /*#__PURE__*/React.createElement(NavLink, {\n      exact: true,\n      to: \"/sign-up\",\n      activeClassName: \"FormTitle__Link--Active\",\n      className: \"FormTitle__Link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 74\n      }\n    }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"FormFields\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"fullName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, \" full Name \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"fullName\",\n      className: formErrors.fullName.length > 0 ? \"errorInput\" : \"FormField__Input\",\n      placeholder: \"Enter your full name\",\n      name: \"fullName\",\n      onChange: this.handleChange,\n      value: this.state.fullName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMassage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 23\n      }\n    }, formErrors.fullName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, \" Email \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      className: this.state.emailError_hidden ? \"FormField__Input\" : \"errorInput\",\n      placeholder: \"Enter your Email address\",\n      name: \"email\",\n      onChange: this.handleChange,\n      value: this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMassage\",\n      hidden: this.state.emailError_hidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }, \"Invalid email address\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"Phone Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, \"phone number\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"phoneNumber\",\n      className: \"FormField__Input\",\n      placeholder: \"Enter your phone number\",\n      name: \"phoneNumber\",\n      value: this.phoneNumber,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMassage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 23\n      }\n    }, formErrors.phoneNumber), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, \" Password \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      className: formErrors.password.length > 0 ? \"errorInput\" : \"FormField__Input\",\n      placeholder: \"Enter your password\",\n      name: \"password\",\n      onChange: this.handleChange,\n      value: this.state.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMassage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 23\n      }\n    }, formErrors.password), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"repeat password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, \" Repeat Password \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"rePassword\",\n      className: formErrors.rePassword.length > 0 ? \"errorInput\" : \"FormField__Input\",\n      placeholder: \"Repeat your password\",\n      name: \"rePassword\",\n      onChange: this.handleChange,\n      value: this.state.rePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMassage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }\n    }, formErrors.rePassword), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__CheckboxLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"FormField__Checkbox\",\n      type: \"checkbox\",\n      id: \"isDoctor\",\n      name: \"isDoctor\",\n      onChange: this.handleChange,\n      checked: this.state.isDoctor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }\n    }), \" Are you a doctor ?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"doctorID\",\n      className: \"FormField__Input\",\n      placeholder: \"Enter your doctorID\",\n      name: \"doctorID\",\n      hidden: this.state.isDoctor ? false : true,\n      onChange: this.handleChange,\n      value: this.state.doctorID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMassage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    }, formErrors.doctorID), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FromFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"FormField__Button mr-20\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, \" Sign Up \"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onRegister: (email, password, FullName, phoneNumber, is_doctor, doctor_id) => dispatch(actions.authSignup(email, password, FullName, phoneNumber, is_doctor, doctor_id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(signUpForm);","map":{"version":3,"sources":["/home/ali/Documents/medical-web-project-/front/src/pages/signUpForm.js"],"names":["React","Component","NavLink","connect","actions","emailRegex","RegExp","formValid","fullNameError_hidden","valid","Object","values","formErrors","forEach","val","length","rest","isDoctor","doctorID","signUpForm","constructor","props","state","fullName","email","phoneNumber","password","rePassword","emailError_hidden","phoneNumberError_hidden","passwordError_hidden","rePasswordError_hidden","handleChange","bind","handleSubmit","e","preventDefault","setState","test","console","log","onRegister","localStorage","getItem","history","push","target","value","type","checked","name","render","mapStateToProps","loading","error","mapDispatchToProps","dispatch","FullName","is_doctor","doctor_id","authSignup"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AAEA,MAAMC,UAAU,GAAGC,MAAM,CAAC,6CAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA6B;AAC3C,MAAIC,KAAK,GAAG,IAAZ;AAEAC,EAAAA,MAAM,CAACC,MAAP,CAAcC,UAAd,EAA0BC,OAA1B,CAAkCC,GAAG,IAAI;AAAEA,IAAAA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBN,KAAK,GAAG,KAA3B;AAAmC,GAA9E;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcK,IAAd,EAAoBH,OAApB,CAA4BC,GAAG,IAAI;AAC/BA,IAAAA,GAAG,CAACC,MAAJ,KAAe,CAAf,KAAqBN,KAAK,GAAG,KAA7B;AACH,GAFD;;AAIA,MAAIO,IAAI,CAACC,QAAL,IAAiBC,QAAQ,CAACH,MAAT,KAAoB,CAAzC,EAA4C;AACxCN,IAAAA,KAAK,GAAG,KAAR;AACH;;AAED,SAAOA,KAAP;AAEH,CAdD;;AAgBA,MAAMU,UAAN,SAAyBlB,SAAzB,CAAmC;AAC/BmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,UAAU,EAAE,EALH;AAMTV,MAAAA,QAAQ,EAAE,KAND;AAOTC,MAAAA,QAAQ,EAAE,EAPD;AASTV,MAAAA,oBAAoB,EAAC,IATZ;AAUToB,MAAAA,iBAAiB,EAAE,IAVV;AAWTC,MAAAA,uBAAuB,EAAC,IAXf;AAYTC,MAAAA,oBAAoB,EAAC,IAZZ;AAaTC,MAAAA,sBAAsB,EAAC;AAbd,KAAb;AAgBA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,KAAKd,KAAL,CAAWC,QAAX,CAAoBR,MAApB,GAA2B,CAA/B,EAAiC;AAC7B,WAAKsB,QAAL,CAAc;AAAE7B,QAAAA,oBAAoB,EAAE;AAAxB,OAAd;AACH;;AACD,QAAI,CAACH,UAAU,CAACiC,IAAX,CAAgB,KAAKhB,KAAL,CAAWE,KAA3B,CAAL,EAAwC;AACpC,WAAKa,QAAL,CAAc;AAAET,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACH;;AACD,QAAI,KAAKN,KAAL,CAAWG,WAAX,IAAwB,EAA5B,EAA+B;AAC3B,WAAKY,QAAL,CAAc;AAACR,QAAAA,uBAAuB,EAAC;AAAzB,OAAd;AACH;;AACD,QAAI,KAAKP,KAAL,CAAWI,QAAX,IAAqB,KAAKJ,KAAL,CAAWK,UAApC,EAA+C;AAC3C,WAAKU,QAAL,CAAc;AAACN,QAAAA,sBAAsB,EAAC;AAAxB,OAAd;AACH;;AACD,QAAIxB,SAAS,CAAC,KAAKe,KAAN,CAAb,EAA2B;AACvBiB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AACA,WAAKD,KAAL,CAAWoB,UAAX,CAAsB,KAAKnB,KAAL,CAAWE,KAAjC,EAAwC,KAAKF,KAAL,CAAWI,QAAnD,EAA6D,KAAKJ,KAAL,CAAWC,QAAxE,EAAkF,KAAKD,KAAL,CAAWG,WAA7F,EAA0G,KAAKH,KAAL,CAAWL,QAArH,EAA+H,KAAKK,KAAL,CAAWJ,QAA1I;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAYE,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ,EAA2C,MAA3C;AACA,WAAKtB,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AAGH,KARD,MASK;AACDN,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEH;AAEJ;;AAEDR,EAAAA,YAAY,CAACG,CAAD,EAAI;AACZ,QAAIW,MAAM,GAAGX,CAAC,CAACW,MAAf;AACA,QAAIC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACC,KAAjE;AACA,QAAIG,IAAI,GAAGJ,MAAM,CAACI,IAAlB;AAEA,QAAItC,UAAU,GAAG,KAAKU,KAAL,CAAWV,UAA5B;;AACA,QAAGsC,IAAI,KAAG,OAAV,EAAkB;AACd,WAAKb,QAAL,CAAc;AACVT,QAAAA,iBAAiB,EAAC;AADR,OAAd;AAGH;;AACD,YAAQsB,IAAR;AACI,WAAK,UAAL;AACItC,QAAAA,UAAU,CAACW,QAAX,GAAsBwB,KAAK,CAAChC,MAAN,GAAe,CAAf,GAAmB,4BAAnB,GAAkD,EAAxE;AACA;;AACJ,WAAK,aAAL;AACIH,QAAAA,UAAU,CAACa,WAAX,GAAyBsB,KAAK,CAAChC,MAAN,KAAiB,EAAjB,GAAsB,EAAtB,GAA2B,6BAApD;AACA;;AACJ,WAAK,UAAL;AACIH,QAAAA,UAAU,CAACc,QAAX,GAAsBqB,KAAK,CAAChC,MAAN,GAAe,CAAf,GAAmB,+BAAnB,GAAqD,EAA3E;AACA;;AACJ,WAAK,YAAL;AACIH,QAAAA,UAAU,CAACe,UAAX,GAAwB,KAAKL,KAAL,CAAWI,QAAX,KAAwBqB,KAAxB,GAAgC,2BAAhC,GAA8D,EAAtF;AACA;;AACJ,WAAK,UAAL;AACInC,QAAAA,UAAU,CAACM,QAAX,GAAsB6B,KAAK,CAAChC,MAAN,GAAe,CAAf,GAAmB,4BAAnB,GAAkD,EAAxE;AACA;;AACJ;AAhBJ;;AAmBA,SAAKsB,QAAL,CACI;AACIzB,MAAAA,UADJ;AAEI,OAACsC,IAAD,GAAQH;AAFZ,KADJ;AAMH;;AACDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEvC,MAAAA;AAAF,QAAiB,KAAKU,KAA5B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,UAAZ;AAAuB,MAAA,eAAe,EAAC,4BAAvC;AAAoE,MAAA,SAAS,EAAC,qBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,UAAZ;AAAuB,MAAA,eAAe,EAAC,4BAAvC;AAAoE,MAAA,SAAS,EAAC,qBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ,eAKI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,UAAZ;AAAuB,MAAA,eAAe,EAAC,yBAAvC;AACI,MAAA,SAAS,EAAC,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,uBAEyD,oBAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,EAAE,EAAC,UAAlB;AAC7C,MAAA,eAAe,EAAC,yBAD6B;AACH,MAAA,SAAS,EAAC,iBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFzD,CALJ,eAUI;AAAM,MAAA,SAAS,EAAC,YAAhB;AACI,MAAA,QAAQ,EAAE,KAAKY,YADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AACI,MAAA,OAAO,EAAC,UADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACI,MAAA,EAAE,EAAC,UADP;AAEI,MAAA,SAAS,EAAEtB,UAAU,CAACW,QAAX,CAAoBR,MAApB,GAA6B,CAA7B,GAAiC,YAAjC,GAAgD,kBAF/D;AAGI,MAAA,WAAW,EAAC,sBAHhB;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,QAAQ,EAAE,KAAKiB,YALnB;AAMI,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,QANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAHJ,eAcM;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCX,UAAU,CAACW,QAA3C,CAdN,eAgBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AACI,MAAA,OAAO,EAAC,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAII;AAAO,MAAA,IAAI,EAAC,MAAZ;AACI,MAAA,EAAE,EAAC,OADP;AAEI,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWM,iBAAX,GAA+B,kBAA/B,GAAoD,YAFnE;AAGI,MAAA,WAAW,EAAC,0BAHhB;AAII,MAAA,IAAI,EAAC,OAJT;AAKI,MAAA,QAAQ,EAAE,KAAKI,YALnB;AAMI,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWE,KANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAhBJ,eA4BM;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWM,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BA5BN,eA8BI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,aAAtB;AAAoC,MAAA,SAAS,EAAC,kBAA9C;AAAiE,MAAA,WAAW,EAAC,yBAA7E;AAAuG,MAAA,IAAI,EAAC,aAA5G;AAA0H,MAAA,KAAK,EAAE,KAAKH,WAAtI;AAAmJ,MAAA,QAAQ,EAAE,KAAKO,YAAlK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA9BJ,eAkCM;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCpB,UAAU,CAACa,WAA3C,CAlCN,eAoCI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AACI,MAAA,OAAO,EAAC,UADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGI;AAAO,MAAA,IAAI,EAAC,UAAZ;AACI,MAAA,EAAE,EAAC,UADP;AAEI,MAAA,SAAS,EAAEb,UAAU,CAACc,QAAX,CAAoBX,MAApB,GAA6B,CAA7B,GAAiC,YAAjC,GAAgD,kBAF/D;AAGI,MAAA,WAAW,EAAC,qBAHhB;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,QAAQ,EAAE,KAAKiB,YALnB;AAMI,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWI,QANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CApCJ,eAgDM;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCd,UAAU,CAACc,QAA3C,CAhDN,eAkDI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AACI,MAAA,OAAO,EAAC,iBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAGI;AAAO,MAAA,IAAI,EAAC,UAAZ;AACI,MAAA,EAAE,EAAC,YADP;AAEI,MAAA,SAAS,EAAEd,UAAU,CAACe,UAAX,CAAsBZ,MAAtB,GAA+B,CAA/B,GAAmC,YAAnC,GAAkD,kBAFjE;AAGI,MAAA,WAAW,EAAC,sBAHhB;AAII,MAAA,IAAI,EAAC,YAJT;AAKI,MAAA,QAAQ,EAAE,KAAKiB,YALnB;AAMI,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWK,UANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAlDJ,eA8DM;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCf,UAAU,CAACe,UAA3C,CA9DN,eAgEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAO,MAAA,SAAS,EAAC,qBAAjB;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,EAAE,EAAC,UAFP;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,QAAQ,EAAE,KAAKK,YAJnB;AAKI,MAAA,OAAO,EAAE,KAAKV,KAAL,CAAWL,QALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,wBADJ,CAhEJ,eA2EI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACI,MAAA,EAAE,EAAC,UADP;AAEI,MAAA,SAAS,EAAC,kBAFd;AAGI,MAAA,WAAW,EAAC,qBAHhB;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,MAAM,EAAE,KAAKK,KAAL,CAAWL,QAAX,GAAsB,KAAtB,GAA8B,IAL1C;AAMI,MAAA,QAAQ,EAAE,KAAKe,YANnB;AAOI,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWJ,QAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA3EJ,eAsFM;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCN,UAAU,CAACM,QAA3C,CAtFN,eAyFI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,yBAAlB;AAA4C,MAAA,OAAO,EAAE,KAAKgB,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAzFJ,CAVJ,CADJ;AA2GH;;AAxM8B;;AA2MnC,MAAMkB,eAAe,GAAI9B,KAAD,IAAW;AAC/B,SAAO;AACH+B,IAAAA,OAAO,EAAE/B,KAAK,CAAC+B,OADZ;AAEHC,IAAAA,KAAK,EAAEhC,KAAK,CAACgC;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHf,IAAAA,UAAU,EAAE,CAACjB,KAAD,EAAQE,QAAR,EAAkB+B,QAAlB,EAA4BhC,WAA5B,EAAyCiC,SAAzC,EAAoDC,SAApD,KACRH,QAAQ,CAACpD,OAAO,CAACwD,UAAR,CAAmBpC,KAAnB,EAA0BE,QAA1B,EAAoC+B,QAApC,EAA8ChC,WAA9C,EAA2DiC,SAA3D,EAAsEC,SAAtE,CAAD;AAFT,GAAP;AAIH,CALD;;AASA,eAAexD,OAAO,CAACiD,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpC,UAA7C,CAAf","sourcesContent":["// const { Component } = require(\"react\")\n\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions/auth'\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/);\n\nconst formValid = ({fullNameError_hidden,}) => {\n    let valid = true\n\n    Object.values(formErrors).forEach(val => { val.length > 0 && (valid = false) });\n    Object.values(rest).forEach(val => {\n        val.length === 0 && (valid = false)\n    });\n\n    if (rest.isDoctor && doctorID.length === 0) {\n        valid = false\n    }\n\n    return valid;\n\n};\n\nclass signUpForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fullName: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n            password: \"\",\n            rePassword: \"\",\n            isDoctor: false,\n            doctorID: \"\",\n\n            fullNameError_hidden:true,\n            emailError_hidden: true,\n            phoneNumberError_hidden:true,\n            passwordError_hidden:true,\n            rePasswordError_hidden:true\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        if (this.state.fullName.length<1){\n            this.setState({ fullNameError_hidden: false })\n        }\n        if (!emailRegex.test(this.state.email)) {\n            this.setState({ emailError_hidden: false })\n        }\n        if (this.state.phoneNumber!=11){\n            this.setState({phoneNumberError_hidden:false})\n        }\n        if (this.state.password!=this.state.rePassword){\n            this.setState({rePasswordError_hidden:false})\n        }\n        if (formValid(this.state)) {\n            console.log('submited');\n            console.log(this.state)\n            this.props.onRegister(this.state.email, this.state.password, this.state.fullName, this.state.phoneNumber, this.state.isDoctor, this.state.doctorID)\n            console.log(localStorage.getItem('token'), \"tset\")\n            this.props.history.push('/sign-in')\n\n\n        }\n        else {\n            console.log(\"Error\")\n\n        }\n\n    }\n\n    handleChange(e) {\n        let target = e.target;\n        let value = target.type === \"checkbox\" ? target.checked : target.value;\n        let name = target.name;\n\n        let formErrors = this.state.formErrors;\n        if(name==='email'){\n            this.setState({\n                emailError_hidden:true\n            })\n        }\n        switch (name) {\n            case 'fullName':\n                formErrors.fullName = value.length < 1 ? 'Please fill out this feild' : '';\n                break;\n            case 'phoneNumber':\n                formErrors.phoneNumber = value.length === 11 ? '' : 'Minimum 11 numbers required';\n                break\n            case 'password':\n                formErrors.password = value.length < 6 ? 'Minimum 6 characters required' : '';\n                break;\n            case 'rePassword':\n                formErrors.rePassword = this.state.password !== value ? 'Password are not matching' : '';\n                break;\n            case 'doctorID':\n                formErrors.doctorID = value.length < 1 ? 'Please fill out this feild' : '';\n                break;\n            default:\n        }\n\n        this.setState(\n            {\n                formErrors,\n                [name]: value,\n            }\n        );\n    }\n    render() {\n        const { formErrors } = this.state;\n        return (\n            <div className=\"FormCenter\" >\n                <div className=\"PageSwitcher\">\n                    <NavLink to=\"/sign-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item \">Sign In</NavLink>\n                    <NavLink to=\"/sign-up\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item \">Sign Up</NavLink>\n                </div>\n                <div className=\"FormTitle\">\n                    <NavLink to=\"/sign-in\" activeClassName=\"FormTitle__Link--Active\"\n                        className=\"FormTitle__Link\">Sign In</NavLink> or <NavLink exact to=\"/sign-up\"\n                            activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign Up</NavLink>\n                </div>\n                <form className=\"FormFields\"\n                    onSubmit={this.handleSubmit} >\n\n                    <div className=\"FormFields\" >\n                        <label className=\"FormField__Label\"\n                            htmlFor=\"fullName\" > full Name </label>\n                        <input type=\"text\"\n                            id=\"fullName\"\n                            className={formErrors.fullName.length > 0 ? \"errorInput\" : \"FormField__Input\"}\n                            placeholder=\"Enter your full name\"\n                            name=\"fullName\"\n                            onChange={this.handleChange}\n                            value={this.state.fullName} />\n                    </div>\n                    {(<span className=\"errorMassage\">{formErrors.fullName}</span>)}\n\n                    <div className=\"FormFields\" >\n\n                        <label className=\"FormField__Label\"\n                            htmlFor=\"email\" > Email </label>\n                        <input type=\"text\"\n                            id=\"email\"\n                            className={this.state.emailError_hidden ? \"FormField__Input\" : \"errorInput\"}\n                            placeholder=\"Enter your Email address\"\n                            name=\"email\"\n                            onChange={this.handleChange}\n                            value={this.state.email} />\n                    </div>\n                    {(<span className=\"errorMassage\" hidden={this.state.emailError_hidden}>Invalid email address</span>)}\n\n                    <div className=\"FormFields\">\n                        <label className=\"FormField__Label\" htmlFor=\"Phone Number\">phone number</label>\n                        <input type=\"text\" id=\"phoneNumber\" className=\"FormField__Input\" placeholder=\"Enter your phone number\" name=\"phoneNumber\" value={this.phoneNumber} onChange={this.handleChange} />\n                    </div>\n                    {(<span className=\"errorMassage\">{formErrors.phoneNumber}</span>)}\n\n                    <div className=\"FormFields\" >\n                        <label className=\"FormField__Label\"\n                            htmlFor=\"password\" > Password </label>\n                        <input type=\"password\"\n                            id=\"password\"\n                            className={formErrors.password.length > 0 ? \"errorInput\" : \"FormField__Input\"}\n                            placeholder=\"Enter your password\"\n                            name=\"password\"\n                            onChange={this.handleChange}\n                            value={this.state.password}\n                        />\n                    </div>\n                    {(<span className=\"errorMassage\">{formErrors.password}</span>)}\n\n                    <div className=\"FormFields\" >\n                        <label className=\"FormField__Label\"\n                            htmlFor=\"repeat password\" > Repeat Password </label>\n                        <input type=\"password\"\n                            id=\"rePassword\"\n                            className={formErrors.rePassword.length > 0 ? \"errorInput\" : \"FormField__Input\"}\n                            placeholder=\"Repeat your password\"\n                            name=\"rePassword\"\n                            onChange={this.handleChange}\n                            value={this.state.rePassword}\n                        />\n                    </div>\n                    {(<span className=\"errorMassage\">{formErrors.rePassword}</span>)}\n\n                    <div className=\"FormFields\" >\n                        <label className=\"FormField__CheckboxLabel\" >\n\n                            <input className=\"FormField__Checkbox\"\n                                type=\"checkbox\"\n                                id=\"isDoctor\"\n                                name=\"isDoctor\"\n                                onChange={this.handleChange}\n                                checked={this.state.isDoctor}\n                            /> Are you a doctor ?</label>\n                    </div>\n                    <div className=\"FormFields\" >\n\n                        <input type=\"text\"\n                            id=\"doctorID\"\n                            className=\"FormField__Input\"\n                            placeholder=\"Enter your doctorID\"\n                            name=\"doctorID\"\n                            hidden={this.state.isDoctor ? false : true}\n                            onChange={this.handleChange}\n                            value={this.state.doctorID} />\n                    </div >\n                    {(<span className=\"errorMassage\">{formErrors.doctorID}</span>)}\n\n\n                    <div className=\"FromFields\" >\n                        <button className=\"FormField__Button mr-20\" onClick={this.handleSubmit} > Sign Up </button>\n                    </div >\n                </form>\n            </div >\n        );\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onRegister: (email, password, FullName, phoneNumber, is_doctor, doctor_id) =>\n            dispatch(actions.authSignup(email, password, FullName, phoneNumber, is_doctor, doctor_id))\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(signUpForm);"]},"metadata":{},"sourceType":"module"}
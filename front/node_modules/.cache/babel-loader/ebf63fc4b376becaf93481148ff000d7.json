{"ast":null,"code":"var _jsxFileName = \"/home/ali/Documents/medical-web-project-/front/src/pages/signInForm.js\";\nimport React, { Component } from 'react';\nimport { NavLink, Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\nimport axios from 'axios';\n\nclass signInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      Error_hidden: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    axios.post('http://localhost:8000/api_user/login/', {\n      password: this.state.password,\n      username: this.state.email\n    }).then(res => {\n      const token = res.data.token; // if token null it's mean doctor not register yet\n\n      localStorage.setItem('token', token);\n      this.setState({\n        Error_hidden: false\n      });\n      this.props.history.push('/');\n    }).catch(err => {\n      console.log(\"error in sign in\");\n      this.setState({\n        Error_hidden: true\n      });\n    });\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    let target = e.target;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    let name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormCenter\",\n      hidden: actions.tokenConvertor(localStorage.getItem('token')) ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PageSwitcher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/sign-in\",\n      activeClassName: \"PageSwitcher__Item--Active\",\n      className: \"PageSwitcher__Item \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/sign-up\",\n      activeClassName: \"PageSwitcher__Item--Active\",\n      className: \"PageSwitcher__Item \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/sign-in\",\n      activeClassName: \"FormTitle__Link--Active\",\n      className: \"FormTitle__Link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Sign In\"), \" or \", /*#__PURE__*/React.createElement(NavLink, {\n      exact: true,\n      to: \"/sign-up\",\n      activeClassName: \"FormTitle__Link--Active\",\n      className: \"FormTitle__Link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 64\n      }\n    }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"FormFields\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      className: \"FormField__Input\",\n      placeholder: \"Enter your Email address\",\n      name: \"email\",\n      value: this.email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      className: \"FormField__Input\",\n      placeholder: \"Enter your password\",\n      name: \"password\",\n      value: this.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FromFields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"FormField__Button mr-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"Sign In \"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/forgetPass\",\n      className: \"FormField__ForgetPass--Link \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Forget your password ? \")), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"errorMassage_Image\",\n      hidden: this.state.Error_hidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"The signin \"))), /*#__PURE__*/React.createElement(\"div\", {\n      hidden: actions.tokenConvertor(localStorage.getItem('token')) ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"you should logout and then you can Sign up or Sign in again\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(signInForm);","map":{"version":3,"sources":["/home/ali/Documents/medical-web-project-/front/src/pages/signInForm.js"],"names":["React","Component","NavLink","Link","connect","actions","axios","signInForm","constructor","props","state","email","password","Error_hidden","handleChange","bind","handleSubmit","e","preventDefault","post","username","then","res","token","data","localStorage","setItem","setState","history","push","catch","err","console","log","target","value","type","checked","name","render","tokenConvertor","getItem","mapStateToProps","loading","error","mapDispatchToProps","dispatch","onAuth","authLogin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink, Link } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions/auth'\nimport axios from 'axios'\n\n\nclass signInForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      Error_hidden: false\n\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    axios.post('http://localhost:8000/api_user/login/', {\n      password: this.state.password,\n      username: this.state.email\n    })\n      .then(res => {\n        const token = res.data.token;\n        // if token null it's mean doctor not register yet\n        localStorage.setItem('token', token);\n        this.setState({ Error_hidden: false })\n        this.props.history.push('/')\n\n\n      })\n      .catch(err => {\n        console.log(\"error in sign in\")\n        this.setState({ Error_hidden:true })\n\n\n      })\n\n  }\n\n  handleChange(e) {\n    e.preventDefault()\n    let target = e.target;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    let name = target.name;\n\n    this.setState(\n      {\n        [name]: value\n      }\n    );\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"FormCenter\" hidden={actions.tokenConvertor(localStorage.getItem('token')) ? true : false}>\n          <div className=\"PageSwitcher\">\n            <NavLink to=\"/sign-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item \">Sign In</NavLink>\n            <NavLink to=\"/sign-up\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item \">Sign Up</NavLink>\n          </div>\n          <div className=\"FormTitle\">\n            <NavLink to=\"/sign-in\" activeClassName=\"FormTitle__Link--Active\"\n              className=\"FormTitle__Link\">Sign In</NavLink> or <NavLink exact to=\"/sign-up\"\n                activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign Up</NavLink>\n          </div>\n          <form className=\"FormFields\" onSubmit={this.handleSubmit}>\n\n            <div className=\"FormFields\">\n              <label className=\"FormField__Label\" htmlFor=\"email\">Email</label>\n              <input type=\"text\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your Email address\" name=\"email\" value={this.email} onChange={this.handleChange} />\n            </div>\n\n            <div className=\"FormFields\">\n              <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\n              <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\" value={this.password} onChange={this.handleChange} />\n            </div>\n\n            <div className=\"FromFields\">\n\n              <button className=\"FormField__Button mr-20\">Sign In </button>\n              <Link to=\"/forgetPass\" className=\"FormField__ForgetPass--Link \">Forget your password ? </Link>\n            </div>\n            <label className=\"errorMassage_Image\"  hidden={this.state.Error_hidden}>The signin </label>\n\n          </form>\n        </div>\n        <div hidden={actions.tokenConvertor(localStorage.getItem('token')) ? false : true}>\n          <h1>you should logout and then you can Sign up or Sign in again</h1>\n        </div>\n      </div>\n    );\n\n  }\n}\n\n\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.loading,\n    error: state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(signInForm);"]},"metadata":{},"sourceType":"module"}
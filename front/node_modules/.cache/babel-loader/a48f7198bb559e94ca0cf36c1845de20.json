{"ast":null,"code":"var _jsxFileName = \"/home/mehdi/Desktop/medical_web/front/src/pages/download.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\n\nclass Download extends Component {\n  render() {\n    const {\n      isAuthenticated\n    } = this.props.isAuthenticated;\n    return { ...(isAuthenticated ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"FormCenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"forgetPass-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }\n      }, \" is Authenticated True\")) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"FormCenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"forgetPass-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      }, \" is Authenticated False\")))\n    };\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nconst mapStateToProps = state => {\n  console.log(state.token);\n  return {\n    isAuthenticated: state.token !== null\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Download);","map":{"version":3,"sources":["/home/mehdi/Desktop/medical_web/front/src/pages/download.js"],"names":["React","Component","connect","actions","Download","render","isAuthenticated","props","mapDispatchToProps","dispatch","onTryAutoSignup","authCheckState","mapStateToProps","state","console","log","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AAGA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAoB,KAAKC,KAAL,CAAWD,eAArC;AACA,WACI,EACI,IAAGA,eAAe,gBACd;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADc,gBAKlB;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CALA;AADJ,KADJ;AAYH;;AAf4B;;AAoBjC,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACLC,IAAAA,eAAe,EAAE,MAAMD,QAAQ,CAACN,OAAO,CAACQ,cAAR,EAAD;AAD1B,GAAP;AAGH,CAJD;;AAOA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;AAEE,SAAM;AACJV,IAAAA,eAAe,EAAEO,KAAK,CAACG,KAAN,KAAgB;AAD7B,GAAN;AAGH,CAND;;AASA,eAAed,OAAO,CAACU,eAAD,EAAkBJ,kBAAlB,CAAP,CAA6CJ,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions/auth'\n\n\nclass Download extends Component {\n    render(){\n        const {isAuthenticated} = this.props.isAuthenticated\n        return(\n            { \n                ...isAuthenticated ?\n                    <div className=\"FormCenter\">\n                        <label className=\"forgetPass-text\"> is Authenticated True</label>\n                    </div>\n                :\n                <div className=\"FormCenter\">\n                    <label className=\"forgetPass-text\"> is Authenticated False</label>\n                </div>\n            }\n        );\n    }\n\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      onTryAutoSignup: () => dispatch(actions.authCheckState())\n    }\n}\n  \n  \nconst mapStateToProps = state => {\n  console.log(state.token)\n\n    return{\n      isAuthenticated: state.token !== null\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Download)\n\n"]},"metadata":{},"sourceType":"module"}
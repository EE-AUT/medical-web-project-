{"ast":null,"code":"var _jsxFileName = \"/home/ali/Documents/medical-web-project-/front/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport signUpForm from \"./pages/signUpForm\";\nimport signInForm from \"./pages/signInForm\";\nimport homeForm from './pages/homeForm';\nimport Navigation from \"./Navigation\";\nimport ForgetPassForm from \"./pages/forgetPass\";\nimport Download from \"./pages/download\";\nimport documentation from \"./pages/documentation\";\nimport './App.css';\nimport * as actions from './store/actions/auth';\nimport { useMedia } from 'react-media';\nconst GLOBAL_MEDIA_QUERIES = {\n  small: \"(max-width: 599px)\",\n  medium: \"(min-width: 600px) and (max-width: 1199px)\",\n  large: \"(min-width: 1200px)\"\n};\nconst matches = useMedia({\n  queries: GLOBAL_MEDIA_QUERIES\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    // console.log(this.props.isAuthenticated, \"tset\")\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App__Form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: homeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/sign-up\",\n      component: signUpForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/sign-in\",\n      component: signInForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/forgetPass\",\n      component: ForgetPassForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/Download\",\n      component: Download,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/documentation\",\n      component: documentation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n} // we can all this in each one of component\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // export default connect(\n//   state => {\n//     return{\n//       isAuthenticated: state.token !== null\n//     }\n//   },\n//   dispatch => {\n//     return {\n//       onTryAutoSignup: () => dispatch(actions.authCheckState())\n//     }\n//   }\n//   )(App);","map":{"version":3,"sources":["/home/ali/Documents/medical-web-project-/front/src/App.js"],"names":["React","Component","BrowserRouter","Route","connect","signUpForm","signInForm","homeForm","Navigation","ForgetPassForm","Download","documentation","actions","useMedia","GLOBAL_MEDIA_QUERIES","small","medium","large","matches","queries","App","componentDidMount","props","onTryAutoSignup","render","mapDispatchToProps","dispatch","authCheckState","mapStateToProps","state","isAuthenticated","token"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport signUpForm from \"./pages/signUpForm\";\nimport signInForm from \"./pages/signInForm\";\nimport homeForm from './pages/homeForm'\nimport Navigation from \"./Navigation\"\nimport ForgetPassForm from \"./pages/forgetPass\"\nimport Download from \"./pages/download\"\nimport documentation from \"./pages/documentation\"\nimport './App.css';\nimport * as actions from './store/actions/auth'\nimport { useMedia } from 'react-media';\n\nconst GLOBAL_MEDIA_QUERIES = {\n  small: \"(max-width: 599px)\",\n  medium: \"(min-width: 600px) and (max-width: 1199px)\",\n  large: \"(min-width: 1200px)\"\n};\n\nconst matches = useMedia({ queries: GLOBAL_MEDIA_QUERIES });\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n  render() {\n    // console.log(this.props.isAuthenticated, \"tset\")\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navigation/>\n          <div className=\"App__Form\">\n            <Route exact path='/' component={homeForm}></Route>\n            <Route path=\"/sign-up\" component={signUpForm}></Route>\n            <Route path=\"/sign-in\" component={signInForm}></Route>\n            <Route path=\"/forgetPass\" component={ForgetPassForm}></Route>\n            <Route path=\"/Download\" component={Download}></Route>\n            <Route path=\"/documentation\" component={documentation}></Route>\n\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\n\n// we can all this in each one of component\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return{\n    isAuthenticated: state.token !== null\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n\n// export default connect(\n//   state => {\n//     return{\n//       isAuthenticated: state.token !== null\n//     }\n//   },\n//   dispatch => {\n//     return {\n//       onTryAutoSignup: () => dispatch(actions.authCheckState())\n//     }\n//   }\n//   )(App);\n"]},"metadata":{},"sourceType":"module"}
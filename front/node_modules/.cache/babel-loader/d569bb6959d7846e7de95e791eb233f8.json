{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n  console.log(\"Logout\");\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispath => {\n    setTimeout(() => {\n      dispath(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (uname, pass) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('http://localhost:8000/api_user/login/', {\n      password: pass,\n      username: uname\n    }).then(res => {\n      const token = res.data.token;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate); //bug !!!!!!!!!!\n      // dispatch(authSuccess(token)); \n\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      console.log(err.response);\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (email, _password_, _FullName_, _phoneNumber_, _is_doctor_, _doctor_id_) => {\n  return dispath => {\n    dispath(authStart);\n    axios.post('http://localhost:8000/api_user/register/', {\n      email: email,\n      phone_number: _phoneNumber_,\n      password: _password_,\n      full_name: _FullName_,\n      register_type: \"web_register\",\n      is_doctor: _is_doctor_,\n      doctor_id: _doctor_id_\n    }).then(res => {\n      console.log(res); // const token = res.data.key;\n      // const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      // localStorage.setItem('token', token);\n      // localStorage.setItem('expirationDate', expirationDate);\n      // dispath(authSuccess(token));\n      // dispath(checkAuthTimeout(3600))\n    }).catch(err => {\n      dispath(authFail(err));\n      console.log(err.response);\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n      console.log(new Date(), new Date(localStorage.getItem('expirationDate')));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};\nexport const tokenConvertor = token => {\n  console.log(token);\n\n  if (token === null) {\n    return false;\n  } else {\n    return true;\n  }\n};","map":{"version":3,"sources":["/home/ali/Documents/medical-web-project-/front/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","console","log","checkAuthTimeout","expirationTime","dispath","setTimeout","authLogin","uname","pass","dispatch","post","password","username","then","res","data","expirationDate","Date","getTime","setItem","catch","err","response","authSignup","email","_password_","_FullName_","_phoneNumber_","_is_doctor_","_doctor_id_","phone_number","full_name","register_type","is_doctor","doctor_id","authCheckState","getItem","undefined","tokenConvertor"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\"\nimport axios from 'axios'\n\nexport const authStart = () => {\n    return{\n        type: actionTypes.AUTH_START\n    }\n}\n\n\nexport const authSuccess = token => {\n    return{\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\n\nexport const authFail = error => {\n    return{\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    return{\n        type: actionTypes.AUTH_LOGOUT\n    }\n    console.log(\"Logout\")\n\n}\n\n\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispath => {\n        setTimeout(() => {\n            dispath(logout())\n        }, expirationTime * 1000)\n    }\n}\n\n\n\n\nexport const authLogin = (uname, pass) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://localhost:8000/api_user/login/', {\n            password: pass,\n            username: uname \n        })\n        .then(res => {\n            const token = res.data.token;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            //bug !!!!!!!!!!\n            // dispatch(authSuccess(token)); \n\n            dispatch(checkAuthTimeout(3600));\n\n        })\n        .catch(err => {\n            console.log(err.response)\n            dispatch(authFail(err))\n        })\n\n    }\n}\n\n\nexport const authSignup = (email, _password_, _FullName_, _phoneNumber_, _is_doctor_, _doctor_id_) => {\n    return dispath => {\n        dispath(authStart);\n        axios.post('http://localhost:8000/api_user/register/', {\n            email: email,\n            phone_number: _phoneNumber_,\n            password: _password_,\n            full_name: _FullName_,\n            register_type: \"web_register\",\n            is_doctor: _is_doctor_,\n            doctor_id: _doctor_id_\n        })\n        .then(res => {\n            console.log(res)\n            // const token = res.data.key;\n            // const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            // localStorage.setItem('token', token);\n            // localStorage.setItem('expirationDate', expirationDate);\n            // dispath(authSuccess(token));\n            // dispath(checkAuthTimeout(3600))\n        })\n        .catch(err=> {\n            dispath(authFail(err))\n            console.log(err.response)\n        })\n    }\n}\n\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            console.log(new Date(),new Date(localStorage.getItem('expirationDate')))\n            if ( expirationDate <= new Date() ) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\n            }\n        }\n    }\n}\n\n\nexport const tokenConvertor=(token)=>{\n    console.log(token)\n    if(token===null){\n        return false\n    }\n    else{\n        return true\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}